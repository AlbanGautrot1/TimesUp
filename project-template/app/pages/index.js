import Link from 'next/link'
import Layout from '../components/Layout.js'
import { useContext } from 'react';
import UserContext from '../components/UserContext';
import { useState, useEffect } from 'react';





export default function Page() {
  const temps = 20;
  const { profile } = useContext(UserContext)
  const [timer, setTimer] = useState(temps);
  const [currentEquipe, setCurrentEquipe] = useState(1);
  const [motIndex, setMotIndex] = useState(0);

  const [team, setteam] = useState([
    { equipe: 1, score: 0 },
    { equipe: 2, score: 0 },
    { equipe: 3, score: 0 },
  ]);
  const [start, setstart] = useState(0)
  const [names, setNames] = useState([
    "Coluche", "Pierre Dac", "Jamel Debbouze", "Pierre Desproges",
    "Raymond Devos", "Gad Elmaleh", "Florence Foresti", "Thierry Le Luron",
    "Dieudonné M'bala M'bala", "Elie Semoun", "Cabu", "Stef and Jim"
  ]);

  useEffect(() => {
    setNames(currentNames => [...currentNames].sort(() => Math.random() - 0.5));
  }, []);

  const handleNextClick = () => {
    if (timer >= temps) {
    }
    else {  
        setMotIndex((motIndex + 1) % names.length);
    }
  };

  const scorer = () => {
    if (timer >= temps) {
    }
    else {
      setMotIndex((motIndex + 1) % names.length);
      setteam(team.map(item => {
        if (item.equipe === currentEquipe) {
          return { ...item, score: item.score + 1 };
        }
        return item;
      }));
    }
  };

  const nextequipe = () => {
          setCurrentEquipe((currentEquipe) % team.length + 1);
  };



  const Start = () => {
    setstart(1)
  }

  function countDown() {
    setTimer(timer - 1);

    if (timer <= 0) {
      setTimer(20)
      nextequipe()
      setstart(0)
    }
  }
  if (start == 1) {
    setTimeout(countDown, 1000)
  }
  const currentTeamDetails = team.find(item => item.equipe === currentEquipe);


  return (
    <Layout title="" description="Generated by create next app">
      <div className="flex flex-col justify-center items-center h-screen bg-gray-100">
        <div className="text-center mb-8">
          <h1 className="text-2xl font-semibold text-gray-700">Equipe: {currentEquipe}</h1>
          <h1 className="text-lg text-gray-500">Timer: {timer}</h1>
        </div>
        <div className="bg-white shadow-lg rounded-lg p-8 mb-4">

          {currentTeamDetails ? (
            <p className="text-4xl font-bold text-gray-800 mb-3">Team {currentTeamDetails.equipe}: {currentTeamDetails.score}</p>
          ) : (
            <p>No team found.</p>
          )}
          
          <h2 className="text-3xl font-bold text-gray-800">{names[motIndex]}</h2>
          <div className="flex space-x-4 justify-center mt-6">
            <button onClick={handleNextClick} className="px-6 py-3 bg-blue-500 text-white font-semibold rounded hover:bg-blue-700 transition duration-300">Pass/Next</button>
            <button onClick={scorer} className="px-6 py-3 bg-green-500 text-white font-semibold rounded hover:bg-green-700 transition duration-300">Validé</button>
            <button onClick={Start} className="px-6 py-3 bg-red-500 text-white font-semibold rounded hover:bg-red-700 transition duration-300">Start</button>
          </div>
        </div>
      </div>
    </Layout>
  )
}
